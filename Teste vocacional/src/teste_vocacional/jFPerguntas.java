/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jFPerguntas.java
 *
 * Created on 08/02/2014, 17:38:26
 */

package teste_vocacional;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import teste_vocacional.classes.ClassConecta;
import teste_vocacional.classes.ColorRenderer;

/**
 *
 * @author Luciano Carrafa Benfica
 */
public class jFPerguntas extends javax.swing.JDialog {

    /** Creates new form jFPerguntas */
    public jFPerguntas() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/universitario.png")).getImage());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sequenciajSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        perguntajTextArea = new javax.swing.JTextArea();
        AlternativasjButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradePerguntajTable = new javax.swing.JTable();

        jPanel2.setName("jPanel2"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(teste_vocacional.Teste_vocacionalApp.class).getContext().getResourceMap(jFPerguntas.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setBackground(resourceMap.getColor("jToolBar1.background")); // NOI18N
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        buscarjButton.setBackground(resourceMap.getColor("buscarjButton.background")); // NOI18N
        buscarjButton.setIcon(resourceMap.getIcon("buscarjButton.icon")); // NOI18N
        buscarjButton.setText(resourceMap.getString("buscarjButton.text")); // NOI18N
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setName("buscarjButton"); // NOI18N
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setBackground(resourceMap.getColor("novojButton.background")); // NOI18N
        novojButton.setIcon(resourceMap.getIcon("novojButton.icon")); // NOI18N
        novojButton.setText(resourceMap.getString("novojButton.text")); // NOI18N
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setName("novojButton"); // NOI18N
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setBackground(resourceMap.getColor("editarjButton.background")); // NOI18N
        editarjButton.setIcon(resourceMap.getIcon("editarjButton.icon")); // NOI18N
        editarjButton.setText(resourceMap.getString("editarjButton.text")); // NOI18N
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setName("editarjButton"); // NOI18N
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);

        salvarjButton.setBackground(resourceMap.getColor("salvarjButton.background")); // NOI18N
        salvarjButton.setIcon(resourceMap.getIcon("salvarjButton.icon")); // NOI18N
        salvarjButton.setText(resourceMap.getString("salvarjButton.text")); // NOI18N
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setName("salvarjButton"); // NOI18N
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setBackground(resourceMap.getColor("salvarMaisjButton.background")); // NOI18N
        salvarMaisjButton.setIcon(resourceMap.getIcon("salvarMaisjButton.icon")); // NOI18N
        salvarMaisjButton.setText(resourceMap.getString("salvarMaisjButton.text")); // NOI18N
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setName("salvarMaisjButton"); // NOI18N
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        alterarjButton.setBackground(resourceMap.getColor("alterarjButton.background")); // NOI18N
        alterarjButton.setIcon(resourceMap.getIcon("alterarjButton.icon")); // NOI18N
        alterarjButton.setText(resourceMap.getString("alterarjButton.text")); // NOI18N
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setName("alterarjButton"); // NOI18N
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setBackground(resourceMap.getColor("excluirjButton.background")); // NOI18N
        excluirjButton.setIcon(resourceMap.getIcon("excluirjButton.icon")); // NOI18N
        excluirjButton.setText(resourceMap.getString("excluirjButton.text")); // NOI18N
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setName("excluirjButton"); // NOI18N
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jToolBar1.add(jSeparator2);

        sairjButton.setBackground(resourceMap.getColor("sairjButton.background")); // NOI18N
        sairjButton.setIcon(resourceMap.getIcon("sairjButton.icon")); // NOI18N
        sairjButton.setText(resourceMap.getString("sairjButton.text")); // NOI18N
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setName("sairjButton"); // NOI18N
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        sequenciajSpinner.setName("sequenciajSpinner"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        perguntajTextArea.setColumns(20);
        perguntajTextArea.setRows(5);
        perguntajTextArea.setName("perguntajTextArea"); // NOI18N
        perguntajTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                perguntajTextAreaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                perguntajTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(perguntajTextArea);

        AlternativasjButton.setText(resourceMap.getString("AlternativasjButton.text")); // NOI18N
        AlternativasjButton.setName("AlternativasjButton"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(sequenciajSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AlternativasjButton))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sequenciajSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AlternativasjButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setName("jPanel4"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        gradePerguntajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Sequencia", "Pergunta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradePerguntajTable.setName("gradePerguntajTable"); // NOI18N
        gradePerguntajTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradePerguntajTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(gradePerguntajTable);
        gradePerguntajTable.getColumnModel().getColumn(0).setResizable(false);
        gradePerguntajTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        gradePerguntajTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradePerguntajTable.columnModel.title0")); // NOI18N
        gradePerguntajTable.getColumnModel().getColumn(1).setResizable(false);
        gradePerguntajTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        gradePerguntajTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gradePerguntajTable.columnModel.title1")); // NOI18N
        gradePerguntajTable.getColumnModel().getColumn(2).setResizable(false);
        gradePerguntajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        gradePerguntajTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("gradePerguntajTable.columnModel.title2")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conexao = new ClassConecta();

    public int Id_Sequencia;        //Variavel usada para verificar a sequencia digitava.
    
    public int Sequencia = 0;       //variavel usada para verificar o maior numero de perguntas na sequencia.
    
    public int cod_Pergunta;        //varíavel usada para pegar o código na grade ao ser clicada

    //******************************************************************************************************
    public void getGradePerguntas() throws ParseException{
       //Consultar Perguntas
        Perguntas oPergunta = new Perguntas();


        if ( perguntajTextArea.getText().length() > 0 ){
            oPergunta.setPergunta(perguntajTextArea.getText()+"%");
        }

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Sequencia", "Pergunta"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradePerguntajTable.setModel(modeloTabela);
        gradePerguntajTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        gradePerguntajTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        gradePerguntajTable.getColumnModel().getColumn(2).setPreferredWidth(300);

        gradePerguntajTable.setDefaultRenderer(Object.class, new ColorRenderer());

try {


            resultSet = oPergunta.getConsultar();

            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Perguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("codPergunta")),
                    resultSet.getString("sequencia"),
                    resultSet.getString("pergunta") ,
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Perguntas.class.getName()).log(Level.SEVERE, null, ex);
        }

           }


     public void getFieldPerguntas(int cod_Pergunta) throws ParseException{

        Perguntas oPergunta = new Perguntas();
        ResultSet rs = null;
        oPergunta.setCodPergunta(cod_Pergunta);

        try {
            rs = oPergunta.getConsultar();
            rs.next();

            //Pegar campos
            sequenciajSpinner.setValue(rs.getInt("sequencia"));
            perguntajTextArea.setText(rs.getString("pergunta"));
        } catch (SQLException ex) {
            Logger.getLogger(Perguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        ClassConecta.conecta();
        
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        novojButton.setEnabled(true);

        buscarjButtonActionPerformed(null);

    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        perguntajTextArea.grabFocus();
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
        sequenciajSpinner.setValue(0);
        perguntajTextArea.setText("");

        sequenciajSpinner.setValue(Sequencia);
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Perguntas oPergunta = new Perguntas();


        Integer retorno;

        //se tiverem digitado um identificador
        if (!sequenciajSpinner.getValue().equals(0)){

        try {
                //então, verifica se o identificador que a pessoa digitou já existe, e armazena o retorno na variável RETORNO.
                retorno = oPergunta.verificaSequencia(Integer.parseInt(sequenciajSpinner.getValue().toString()));

                //se retornar algo, quer dizer que o identificador já existe
                if (retorno > 0) {

                    String registro;

                    registro = perguntajTextArea.getText();     // Guarda o registro escrito no textArea

                    //então mande uma mensagem dizendo que o identificador já existe
                    JOptionPane.showMessageDialog(null, "A sequência numero " + " " + retorno + " " + "já existe");

                    novojButtonActionPerformed(evt);            // Se a sequencia ja existir, clique novamente no botão novo.
                    perguntajTextArea.setText(registro);        // Preenche o campo TextArea que fica em branco quando aparece a mensagem no sistema.
                }else{


                Id_Sequencia = Integer.parseInt(sequenciajSpinner.getValue().toString());
                sequenciajSpinner.setValue(Id_Sequencia);

                oPergunta.setSequencia(Id_Sequencia);
                oPergunta.setPergunta(perguntajTextArea.getText().trim());
                oPergunta.setCadastrar();
                
                try {
                    ClassConecta.con.commit();
                    ClassConecta.con.setAutoCommit(true);
                } catch (SQLException ex) {
                    Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        try {
            getGradePerguntas();
        } catch (ParseException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
        buscarjButtonActionPerformed(evt);

    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGradePerguntas();
        } catch (ParseException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
         try {
             Perguntas oPergunta = new Perguntas();
            Sequencia = oPergunta.getQuantidadeTotalPergunta();
        } catch (SQLException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Sequencia ++;

        sequenciajSpinner.setValue(Sequencia);


    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(evt);
        novojButtonActionPerformed(evt);
        
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        Perguntas oPergunta = new Perguntas();

        Integer retorno;

        //se tiverem digitado um identificador
        if (!sequenciajSpinner.getValue().equals(0)){

        try {
                //então, verifica se o identificador que a pessoa digitou já existe, e armazena o retorno na variável RETORNO.
                retorno = oPergunta.verificaSequencia(Integer.parseInt(sequenciajSpinner.getValue().toString()));

                //se retornar algo, quer dizer que o identificador já existe
                if (retorno > 0) {

                    String registro;

                    registro = perguntajTextArea.getText();     // Guarda o registro escrito no textArea

                    //então mande uma mensagem dizendo que o identificador já existe
                    JOptionPane.showMessageDialog(null, "A sequência numero " + " " + retorno + " " + "já existe");

                    novojButtonActionPerformed(evt);            // Se a sequencia ja existir, clique novamente no botão novo.
                    perguntajTextArea.setText(registro);        // Preenche o campo TextArea que fica em branco quando aparece a mensagem no sistema.
                }else{


                Id_Sequencia = Integer.parseInt(sequenciajSpinner.getValue().toString());
                sequenciajSpinner.setValue(Id_Sequencia);

                oPergunta.setSequencia(Id_Sequencia);
                oPergunta.setPergunta(perguntajTextArea.getText().trim());
                oPergunta.setAlterar(conexao);

                try {
                    ClassConecta.con.commit();
                    ClassConecta.con.setAutoCommit(true);
                } catch (SQLException ex) {
                    Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        try {
            getGradePerguntas();
        } catch (ParseException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        buscarjButtonActionPerformed(evt);

    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void gradePerguntajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradePerguntajTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
            cod_Pergunta = Integer.parseInt(gradePerguntajTable.getValueAt(gradePerguntajTable.getSelectedRow(), 0).toString());
            if (cod_Pergunta == 0) {
                return;
            }
        try {
            getFieldPerguntas(cod_Pergunta);
        } catch (ParseException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradePerguntajTableMouseClicked

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação do Sistema!", JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        Perguntas oPergunta = new Perguntas();
        oPergunta.setCodPergunta(cod_Pergunta);

        oPergunta.setExcluir();
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }

            perguntajTextArea.setText("");
            buscarjButtonActionPerformed(evt);
        try {
            getGradePerguntas();
        } catch (ParseException ex) {
            Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void perguntajTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_perguntajTextAreaKeyReleased
        // TODO add your handling code here:
        if (!alterarjButton.isEnabled()){
            try {
                Perguntas oPergunta = new Perguntas();
                oPergunta.setPergunta(perguntajTextArea.getText());
                ResultSet rs = null;
                rs = oPergunta.getConsultar();
                getGradePerguntas();
            } catch (ParseException ex) {
                Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(jFPerguntas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (perguntajTextArea.getText().equals("")){
            buscarjButtonActionPerformed(null);
            editarjButton.setEnabled(false);
        }
    }//GEN-LAST:event_perguntajTextAreaKeyReleased

    private void perguntajTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_perguntajTextAreaKeyTyped
        // TODO add your handling code here:
        perguntajTextArea.setLineWrap(true);
        perguntajTextArea.setWrapStyleWord(true);
    }//GEN-LAST:event_perguntajTextAreaKeyTyped

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new jFPerguntas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AlternativasjButton;
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradePerguntajTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextArea perguntajTextArea;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JSpinner sequenciajSpinner;
    // End of variables declaration//GEN-END:variables

}
