/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jFAlternativas.java
 *
 * Created on 08/02/2014, 23:56:53
 */

package teste_vocacional;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import teste_vocacional.classes.Alternativas;
import teste_vocacional.classes.ClassConecta;
import teste_vocacional.classes.ColorRenderer;
import teste_vocacional.classes.ComboItem;
import teste_vocacional.classes.Vocacoes;

/**
 *
 * @author Luciano Carrafa Benfica
 */
public class jFAlternativas extends javax.swing.JFrame {

    /** Creates new form jFAlternativas */
    public jFAlternativas() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/universitario.png")).getImage());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        letrajTextField = new javax.swing.JTextField();
        perguntajComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        atualizaPerguntajButton = new javax.swing.JButton();
        cadastraPerguntajButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cadastraVocacaojButton = new javax.swing.JButton();
        atualizaVocacaojButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        alternativajTextArea = new javax.swing.JTextArea();
        vocacaojComboBox = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradeAlternativajTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(teste_vocacional.Teste_vocacionalApp.class).getContext().getResourceMap(jFAlternativas.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setBackground(resourceMap.getColor("jToolBar1.background")); // NOI18N
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        buscarjButton.setBackground(resourceMap.getColor("buscarjButton.background")); // NOI18N
        buscarjButton.setIcon(resourceMap.getIcon("buscarjButton.icon")); // NOI18N
        buscarjButton.setText(resourceMap.getString("buscarjButton.text")); // NOI18N
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setName("buscarjButton"); // NOI18N
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setBackground(resourceMap.getColor("novojButton.background")); // NOI18N
        novojButton.setIcon(resourceMap.getIcon("novojButton.icon")); // NOI18N
        novojButton.setText(resourceMap.getString("novojButton.text")); // NOI18N
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setName("novojButton"); // NOI18N
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setBackground(resourceMap.getColor("editarjButton.background")); // NOI18N
        editarjButton.setIcon(resourceMap.getIcon("editarjButton.icon")); // NOI18N
        editarjButton.setText(resourceMap.getString("editarjButton.text")); // NOI18N
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setName("editarjButton"); // NOI18N
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);

        salvarjButton.setBackground(resourceMap.getColor("salvarjButton.background")); // NOI18N
        salvarjButton.setIcon(resourceMap.getIcon("salvarjButton.icon")); // NOI18N
        salvarjButton.setText(resourceMap.getString("salvarjButton.text")); // NOI18N
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setName("salvarjButton"); // NOI18N
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setBackground(resourceMap.getColor("salvarMaisjButton.background")); // NOI18N
        salvarMaisjButton.setIcon(resourceMap.getIcon("salvarMaisjButton.icon")); // NOI18N
        salvarMaisjButton.setText(resourceMap.getString("salvarMaisjButton.text")); // NOI18N
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setName("salvarMaisjButton"); // NOI18N
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        alterarjButton.setBackground(resourceMap.getColor("alterarjButton.background")); // NOI18N
        alterarjButton.setIcon(resourceMap.getIcon("alterarjButton.icon")); // NOI18N
        alterarjButton.setText(resourceMap.getString("alterarjButton.text")); // NOI18N
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setName("alterarjButton"); // NOI18N
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setBackground(resourceMap.getColor("excluirjButton.background")); // NOI18N
        excluirjButton.setIcon(resourceMap.getIcon("excluirjButton.icon")); // NOI18N
        excluirjButton.setText(resourceMap.getString("excluirjButton.text")); // NOI18N
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setName("excluirjButton"); // NOI18N
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jToolBar1.add(jSeparator2);

        sairjButton.setBackground(resourceMap.getColor("sairjButton.background")); // NOI18N
        sairjButton.setIcon(resourceMap.getIcon("sairjButton.icon")); // NOI18N
        sairjButton.setText(resourceMap.getString("sairjButton.text")); // NOI18N
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setName("sairjButton"); // NOI18N
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        letrajTextField.setText(resourceMap.getString("letrajTextField.text")); // NOI18N
        letrajTextField.setName("letrajTextField"); // NOI18N

        perguntajComboBox.setName("perguntajComboBox"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        atualizaPerguntajButton.setIcon(resourceMap.getIcon("atualizaPerguntajButton.icon")); // NOI18N
        atualizaPerguntajButton.setText(resourceMap.getString("atualizaPerguntajButton.text")); // NOI18N
        atualizaPerguntajButton.setContentAreaFilled(false);
        atualizaPerguntajButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        atualizaPerguntajButton.setName("atualizaPerguntajButton"); // NOI18N
        atualizaPerguntajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaPerguntajButtonActionPerformed(evt);
            }
        });

        cadastraPerguntajButton.setIcon(resourceMap.getIcon("cadastraPerguntajButton.icon")); // NOI18N
        cadastraPerguntajButton.setText(resourceMap.getString("cadastraPerguntajButton.text")); // NOI18N
        cadastraPerguntajButton.setContentAreaFilled(false);
        cadastraPerguntajButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cadastraPerguntajButton.setName("cadastraPerguntajButton"); // NOI18N
        cadastraPerguntajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraPerguntajButtonActionPerformed(evt);
            }
        });

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        cadastraVocacaojButton.setIcon(resourceMap.getIcon("cadastraVocacaojButton.icon")); // NOI18N
        cadastraVocacaojButton.setText(resourceMap.getString("cadastraVocacaojButton.text")); // NOI18N
        cadastraVocacaojButton.setContentAreaFilled(false);
        cadastraVocacaojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cadastraVocacaojButton.setName("cadastraVocacaojButton"); // NOI18N
        cadastraVocacaojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraVocacaojButtonActionPerformed(evt);
            }
        });

        atualizaVocacaojButton.setIcon(resourceMap.getIcon("atualizaVocacaojButton.icon")); // NOI18N
        atualizaVocacaojButton.setText(resourceMap.getString("atualizaVocacaojButton.text")); // NOI18N
        atualizaVocacaojButton.setContentAreaFilled(false);
        atualizaVocacaojButton.setName("atualizaVocacaojButton"); // NOI18N
        atualizaVocacaojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaVocacaojButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        alternativajTextArea.setColumns(20);
        alternativajTextArea.setRows(5);
        alternativajTextArea.setName("alternativajTextArea"); // NOI18N
        alternativajTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                alternativajTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(alternativajTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        vocacaojComboBox.setName("vocacaojComboBox"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(letrajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(vocacaojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1)
                                    .addComponent(perguntajComboBox, 0, 487, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cadastraPerguntajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(atualizaPerguntajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cadastraVocacaojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(atualizaVocacaojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jLabel4))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(atualizaPerguntajButton, 0, 0, Short.MAX_VALUE))
                        .addComponent(cadastraPerguntajButton, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(letrajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(perguntajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vocacaojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cadastraVocacaojButton)
                    .addComponent(atualizaVocacaojButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel4.setBackground(resourceMap.getColor("jPanel4.background")); // NOI18N
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setName("jPanel4"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        gradeAlternativajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Letra", "Alternativa", "Vocação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeAlternativajTable.setName("gradeAlternativajTable"); // NOI18N
        gradeAlternativajTable.getTableHeader().setReorderingAllowed(false);
        gradeAlternativajTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeAlternativajTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(gradeAlternativajTable);
        gradeAlternativajTable.getColumnModel().getColumn(0).setResizable(false);
        gradeAlternativajTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        gradeAlternativajTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradeAlternativajTable.columnModel.title0")); // NOI18N
        gradeAlternativajTable.getColumnModel().getColumn(1).setResizable(false);
        gradeAlternativajTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        gradeAlternativajTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gradeAlternativajTable.columnModel.title1")); // NOI18N
        gradeAlternativajTable.getColumnModel().getColumn(2).setResizable(false);
        gradeAlternativajTable.getColumnModel().getColumn(2).setPreferredWidth(200);
        gradeAlternativajTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("gradeAlternativajTable.columnModel.title2")); // NOI18N
        gradeAlternativajTable.getColumnModel().getColumn(3).setResizable(false);
        gradeAlternativajTable.getColumnModel().getColumn(3).setPreferredWidth(200);
        gradeAlternativajTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("gradeAlternativajTable.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conexao = new ClassConecta();
    
    ComboItem comboPergunta;

    ComboItem comboVocacao;

    int cod_alterantiva;


    //******************************************************************************************************
    public void getGradeAlternativa() throws ParseException{
       //Consultar Cidades
        Alternativas oAlternativa = new Alternativas();


        if ( alternativajTextArea.getText().length() > 0 ){
            oAlternativa.setAlternativa(alternativajTextArea.getText()+"%");
        }

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"#Id", "Letra", "Alternativa", "Vocação"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeAlternativajTable.setModel(modeloTabela);
        gradeAlternativajTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        gradeAlternativajTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        gradeAlternativajTable.getColumnModel().getColumn(2).setPreferredWidth(200);
        gradeAlternativajTable.getColumnModel().getColumn(3).setPreferredWidth(200);

        gradeAlternativajTable.setDefaultRenderer(Object.class, new ColorRenderer());


try {
//***********************************************************************************************************************************
//              SETAR UM CODIGO POARA FILTRAR A TABELA
//            oAlternativa.setCodPergunta(comboPergunta.getId());
            resultSet = oAlternativa.getConsultar();

            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Alternativas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Problema ao preencher a tabela: " +  ex.getMessage());
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("codAlternativa")),
                    resultSet.getString("letra"),
                    resultSet.getString("alternativa"),
                    resultSet.getString("vocacao") ,
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Alternativas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Problema ao preencher a tabela: " +  ex.getMessage());
        }

           }


     public void getFieldAlternativa(int codAlternativa) throws ParseException{

        Alternativas oAlternativa = new Alternativas();
        ResultSet rs = null;
        oAlternativa.setCodAlternativa(codAlternativa);

        try {
            rs = oAlternativa.getConsultarAlternativas2();
            rs.next();

            ComboItem oItem = new ComboItem(rs.getInt("codPergunta"), rs.getString("pergunta"));
            perguntajComboBox.setSelectedItem(oItem);

            ComboItem oItem2 = new ComboItem(rs.getInt("codVocacao"), rs.getString("vocacao"));
            vocacaojComboBox.setSelectedItem(oItem2);

            //Pegar campos
            letrajTextField.setText(rs.getString("letra"));
            alternativajTextArea.setText(rs.getString("alternativa"));
            perguntajComboBox.setSelectedItem(rs.getString("pergunta"));
            vocacaojComboBox.setSelectedItem(rs.getString("vocacao"));

        } catch (SQLException ex) {
            Logger.getLogger(Alternativas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        ClassConecta.conecta();

        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        novojButton.setEnabled(true);
        letrajTextField.grabFocus();

        buscarjButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void alternativajTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alternativajTextAreaKeyTyped
        // TODO add your handling code here:
        alternativajTextArea.setLineWrap(true);
        alternativajTextArea.setWrapStyleWord(true);
    }//GEN-LAST:event_alternativajTextAreaKeyTyped

    private void atualizaPerguntajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaPerguntajButtonActionPerformed
        // TODO add your handling code here:
        try {
            Perguntas oPergunta = new Perguntas();
            ResultSet rs = null;

            rs = oPergunta.getConsultar();
            perguntajComboBox.removeAllItems();
            while (rs.next()) {
                perguntajComboBox.addItem(new ComboItem(rs.getInt("codPergunta"), rs.getString("pergunta")));
            }
            perguntajComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizaPerguntajButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGradeAlternativa();
        } catch (ParseException ex) {
            Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }

        atualizaPerguntajButtonActionPerformed(evt);
        atualizaVocacaojButtonActionPerformed(evt);
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void cadastraPerguntajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraPerguntajButtonActionPerformed
        // TODO add your handling code here:
        jFPerguntas oFormPerguntas = new jFPerguntas();

        oFormPerguntas.setTitle("Cadastro de Alternativas");
        oFormPerguntas.pack();
        oFormPerguntas.setLocationRelativeTo(null);
        oFormPerguntas.setModal(true);
        oFormPerguntas.setVisible(true);
        atualizaPerguntajButtonActionPerformed(evt);
    }//GEN-LAST:event_cadastraPerguntajButtonActionPerformed

    private void atualizaVocacaojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaVocacaojButtonActionPerformed
        // TODO add your handling code here:
        try {
            Vocacoes oVocacao = new Vocacoes();
            ResultSet rs = null;

            rs = oVocacao.getConsultar();
            vocacaojComboBox.removeAllItems();
            while (rs.next()) {
                vocacaojComboBox.addItem(new ComboItem(rs.getInt("codVocacao"), rs.getString("vocacao")));
//                paisjTextField.setText(rs.getString("PAIS"));
            }
            vocacaojComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFVocacoes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_atualizaVocacaojButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        letrajTextField.grabFocus();
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }
        letrajTextField.setText("");
        alternativajTextArea.setText("");

    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        comboPergunta = (ComboItem) perguntajComboBox.getSelectedItem();
        comboVocacao = (ComboItem) vocacaojComboBox.getSelectedItem();

        Alternativas oAlternativa = new Alternativas();

        String letra;
        String alternativa;

        letra = letrajTextField.getText();
        alternativa = alternativajTextArea.getText();

        if (letrajTextField.getText().equals("") || perguntajComboBox.getSelectedItem().equals("") ||
            vocacaojComboBox.getSelectedItem().equals("") || alternativajTextArea.getText().equals("")){

            JOptionPane.showMessageDialog(null, "TODOS os campos são obrigatórios", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
            novojButtonActionPerformed(null);
            letrajTextField.setText(letra);
            alternativajTextArea.setText(alternativa);
        }else{


            oAlternativa.setLetra(letrajTextField.getText().trim().toUpperCase());
            oAlternativa.setAlternativa(alternativajTextArea.getText().trim());
            oAlternativa.setCodPergunta(comboPergunta.getId());
            oAlternativa.setCodVocacao(comboVocacao.getId());

            oAlternativa.setCadastrar();

            try {
                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
            } catch (SQLException ex) {
                Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                getGradeAlternativa();
            } catch (ParseException ex) {
                Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
            }

            atualizaPerguntajButtonActionPerformed(evt);
            atualizaVocacaojButtonActionPerformed(evt);
        }
        
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(evt);
        novojButtonActionPerformed(evt);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        comboPergunta = (ComboItem) perguntajComboBox.getSelectedItem();
        comboVocacao = (ComboItem) vocacaojComboBox.getSelectedItem();
        @SuppressWarnings("LocalVariableHidesMemberVariable")

        Alternativas oAlternativa = new Alternativas();
        oAlternativa.setCodAlternativa(cod_alterantiva);

        String letra;
        String alternativa;

        letra = letrajTextField.getText();
        alternativa = alternativajTextArea.getText();

        if (letrajTextField.getText().equals("") || perguntajComboBox.getSelectedItem().equals("") ||
            vocacaojComboBox.getSelectedItem().equals("") || alternativajTextArea.getText().equals("")){

            JOptionPane.showMessageDialog(null, "TODOS os campos são obrigatórios", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
            novojButtonActionPerformed(null);
            letrajTextField.setText(letra);
            alternativajTextArea.setText(alternativa);
        }else{


            oAlternativa.setLetra(letrajTextField.getText().trim().toUpperCase());
            oAlternativa.setAlternativa(alternativajTextArea.getText().trim());
            oAlternativa.setCodPergunta(comboPergunta.getId());
            oAlternativa.setCodVocacao(comboVocacao.getId());

            oAlternativa.setAlterar(conexao);

            try {
                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
            } catch (SQLException ex) {
                Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                getGradeAlternativa();
            } catch (ParseException ex) {
                Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
            }
            atualizaPerguntajButtonActionPerformed(evt);
            atualizaVocacaojButtonActionPerformed(evt);
        }


    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void gradeAlternativajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeAlternativajTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
            cod_alterantiva = Integer.parseInt(gradeAlternativajTable.getValueAt(gradeAlternativajTable.getSelectedRow(), 0).toString());
            if (cod_alterantiva == 0) {
                return;
            }
        try {
            getFieldAlternativa(cod_alterantiva);
        } catch (ParseException ex) {
            Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeAlternativajTableMouseClicked

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação do Sistema!", JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        Alternativas oAlternativa = new Alternativas();
        oAlternativa.setCodAlternativa(cod_alterantiva);

        oAlternativa.setExcluir();
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }

            letrajTextField.setText("");
            alternativajTextArea.setText("");
            atualizaPerguntajButtonActionPerformed(evt);
            atualizaVocacaojButtonActionPerformed(evt);
        try {
            getGradeAlternativa();
        } catch (ParseException ex) {
            Logger.getLogger(jFAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void cadastraVocacaojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraVocacaojButtonActionPerformed
        // TODO add your handling code here:
        jFVocacoes oFormVocacoes = new jFVocacoes();

        oFormVocacoes.setTitle("Cadastro de Vocações");
        oFormVocacoes.pack();
        oFormVocacoes.setLocationRelativeTo(null);
        oFormVocacoes.setModal(true);
        oFormVocacoes.setVisible(true);
        atualizaVocacaojButtonActionPerformed(evt);
    }//GEN-LAST:event_cadastraVocacaojButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new jFAlternativas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JTextArea alternativajTextArea;
    private javax.swing.JButton atualizaPerguntajButton;
    private javax.swing.JButton atualizaVocacaojButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cadastraPerguntajButton;
    private javax.swing.JButton cadastraVocacaojButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeAlternativajTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField letrajTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JComboBox perguntajComboBox;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox vocacaojComboBox;
    // End of variables declaration//GEN-END:variables

}
